{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "27c85955",
   "metadata": {
    "papermill": {
     "duration": 0.005527,
     "end_time": "2024-07-20T17:13:46.666317",
     "exception": false,
     "start_time": "2024-07-20T17:13:46.660790",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "/kaggle/input/titanic/train.csv\n",
    "/kaggle/input/titanic/test.csv\n",
    "/kaggle/input/titanic/gender_submission.csv\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0ccccbbd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:13:46.679611Z",
     "iopub.status.busy": "2024-07-20T17:13:46.678643Z",
     "iopub.status.idle": "2024-07-20T17:13:52.608778Z",
     "shell.execute_reply": "2024-07-20T17:13:52.607172Z"
    },
    "papermill": {
     "duration": 5.938621,
     "end_time": "2024-07-20T17:13:52.611609",
     "exception": false,
     "start_time": "2024-07-20T17:13:46.672988",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['train.csv', 'test.csv', 'gender_submission.csv']\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "from torch.utils.data import DataLoader\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Set random seed for reproducibility\n",
    "torch.manual_seed(42)\n",
    "np.random.seed(42)\n",
    "\n",
    "# Setup path\n",
    "TRAIN_PATH = '/kaggle/input/titanic/train.csv'\n",
    "TEST_PATH = '/kaggle/input/titanic/test.csv'\n",
    "OUTPUT_PATH = '/kaggle/working/gender_submission.csv'\n",
    "print(os.listdir('/kaggle/input/titanic'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "962c9186",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:13:52.624246Z",
     "iopub.status.busy": "2024-07-20T17:13:52.623080Z",
     "iopub.status.idle": "2024-07-20T17:13:52.691571Z",
     "shell.execute_reply": "2024-07-20T17:13:52.690122Z"
    },
    "papermill": {
     "duration": 0.078917,
     "end_time": "2024-07-20T17:13:52.695640",
     "exception": false,
     "start_time": "2024-07-20T17:13:52.616723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train data:\n",
      "   PassengerId  Survived  Pclass  \\\n",
      "0            1         0       3   \n",
      "1            2         1       1   \n",
      "2            3         1       3   \n",
      "3            4         1       1   \n",
      "4            5         0       3   \n",
      "\n",
      "                                                Name     Sex   Age  SibSp  \\\n",
      "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
      "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
      "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
      "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
      "4                           Allen, Mr. William Henry    male  35.0      0   \n",
      "\n",
      "   Parch            Ticket     Fare Cabin Embarked  \n",
      "0      0         A/5 21171   7.2500   NaN        S  \n",
      "1      0          PC 17599  71.2833   C85        C  \n",
      "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
      "3      0            113803  53.1000  C123        S  \n",
      "4      0            373450   8.0500   NaN        S  \n",
      "\n",
      "\n",
      "\n",
      "Test data:\n",
      "   PassengerId  Pclass                                          Name     Sex  \\\n",
      "0          892       3                              Kelly, Mr. James    male   \n",
      "1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n",
      "2          894       2                     Myles, Mr. Thomas Francis    male   \n",
      "3          895       3                              Wirz, Mr. Albert    male   \n",
      "4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n",
      "\n",
      "    Age  SibSp  Parch   Ticket     Fare Cabin Embarked  \n",
      "0  34.5      0      0   330911   7.8292   NaN        Q  \n",
      "1  47.0      1      0   363272   7.0000   NaN        S  \n",
      "2  62.0      0      0   240276   9.6875   NaN        Q  \n",
      "3  27.0      0      0   315154   8.6625   NaN        S  \n",
      "4  22.0      1      1  3101298  12.2875   NaN        S  \n"
     ]
    }
   ],
   "source": [
    "# Visualize data\n",
    "train_df = pd.read_csv(TRAIN_PATH)\n",
    "test_df = pd.read_csv(TEST_PATH)\n",
    "print(\"Train data:\")\n",
    "print(train_df.head())\n",
    "print('\\n\\n')\n",
    "print(\"Test data:\")\n",
    "print(test_df.head())                                                                                        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cb5c36e9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:13:52.709557Z",
     "iopub.status.busy": "2024-07-20T17:13:52.708977Z",
     "iopub.status.idle": "2024-07-20T17:13:54.365325Z",
     "shell.execute_reply": "2024-07-20T17:13:54.363787Z"
    },
    "papermill": {
     "duration": 1.666945,
     "end_time": "2024-07-20T17:13:54.368613",
     "exception": false,
     "start_time": "2024-07-20T17:13:52.701668",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train data:\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Pclass       891 non-null    int64  \n",
      " 2   Sex          891 non-null    int64  \n",
      " 3   Age          891 non-null    float64\n",
      " 4   SibSp        891 non-null    int64  \n",
      " 5   Parch        891 non-null    int64  \n",
      " 6   Fare         891 non-null    float64\n",
      " 7   Cabin        891 non-null    int64  \n",
      "dtypes: float64(2), int64(6)\n",
      "memory usage: 55.8 KB\n",
      "None\n",
      "\n",
      "\n",
      "\n",
      "Test data:\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  418 non-null    int64  \n",
      " 1   Pclass       418 non-null    int64  \n",
      " 2   Sex          418 non-null    int64  \n",
      " 3   Age          418 non-null    float64\n",
      " 4   SibSp        418 non-null    int64  \n",
      " 5   Parch        418 non-null    int64  \n",
      " 6   Fare         418 non-null    float64\n",
      " 7   Cabin        418 non-null    int64  \n",
      "dtypes: float64(2), int64(6)\n",
      "memory usage: 26.2 KB\n",
      "None\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1000 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Preprocess data\n",
    "\n",
    "# Transform port of embarkation to -1, 0, 1 for Southampton, Cherbourg, Queenstown\n",
    "train_df['Embarked'] = train_df['Embarked'].map({'S': -1, 'C': 0, 'Q': 1})\n",
    "test_df['Embarked'] = test_df['Embarked'].map({'S': -1, 'C': 0, 'Q': 1})\n",
    "\n",
    "# Transform sex to 0, 1\n",
    "train_df['Sex'] = train_df['Sex'].map({\"male\": 1, 'female': -1})\n",
    "test_df['Sex'] = test_df['Sex'].map({\"male\": 1, 'female': -1})\n",
    "\n",
    "# Encode cabin letters + numbers to numbers\n",
    "train_df['Cabin'] = train_df['Cabin'].str.extract('([A-Za-z])')\n",
    "test_df['Cabin'] = test_df['Cabin'].str.extract('([A-Za-z])')\n",
    "train_df['Cabin'] = train_df['Cabin'].fillna('U')\n",
    "test_df['Cabin'] = test_df['Cabin'].fillna('U')\n",
    "cabin_mapping = {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5, 'G': 6, 'T': 7, 'U': 8}\n",
    "train_df['Cabin'] = train_df['Cabin'].map(cabin_mapping)\n",
    "test_df['Cabin'] = test_df['Cabin'].map(cabin_mapping)\n",
    "\n",
    "# Get target variable\n",
    "y = train_df['Survived']\n",
    "\n",
    "# Get rid of unnecessary columns\n",
    "X = train_df.drop(['Survived', 'Name', 'Ticket', 'Embarked'], axis=1)\n",
    "X_test = test_df.drop(['Name', 'Ticket', 'Embarked'], axis=1)\n",
    "\n",
    "# Fill missing values\n",
    "X['Age'] = X['Age'].fillna(X['Age'].mean())\n",
    "X['Fare'] = X['Fare'].fillna(X['Fare'].mean())\n",
    "X_test['Age'] = X_test['Age'].fillna(X_test['Age'].mean())\n",
    "X_test['Fare'] = X_test['Fare'].fillna(X_test['Fare'].mean())\n",
    "\n",
    "# Make sure there are no missing values and all values are numerical\n",
    "print(\"Train data:\")\n",
    "print(X.info())\n",
    "print('\\n\\n')\n",
    "print(\"Test data:\")\n",
    "print(X_test.info())\n",
    "\n",
    "\n",
    "class TitanicDataset(torch.utils.data.Dataset):\n",
    "    def __init__(self, X, y):\n",
    "        self.X = torch.tensor(X.values, dtype=torch.float32)\n",
    "        self.y = torch.tensor(y.values, dtype=torch.int64)\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.X)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        return self.X[idx], self.y[idx]\n",
    "    \n",
    "# Split data into training and validation sets\n",
    "X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Create dataloaders\n",
    "train_dataset = TitanicDataset(X_train, y_train)\n",
    "val_dataset = TitanicDataset(X_val, y_val)\n",
    "train_loader = DataLoader(train_dataset, batch_size=32, shuffle=True)\n",
    "val_loader = DataLoader(val_dataset, batch_size=32, shuffle=False)\n",
    "\n",
    "# Plot disribution of age, number of siblings/spouses, number of parents/children, number of fare and class\n",
    "fig, axs = plt.subplots(2, 3, figsize=(15, 10))\n",
    "axs[0, 0].hist(X['Age'], bins=20)\n",
    "axs[0, 0].set_title('Age')\n",
    "axs[0, 1].hist(X['SibSp'], bins=20)\n",
    "axs[0, 1].set_title('SibSp')\n",
    "axs[0, 2].hist(X['Parch'], bins=20)\n",
    "axs[0, 2].set_title('Parch')\n",
    "axs[1, 0].hist(X['Fare'], bins=20)\n",
    "axs[1, 0].set_title('Fare')\n",
    "axs[1, 1].hist(X['Pclass'], bins=20)\n",
    "axs[1, 1].set_title('Pclass')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4e206102",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:13:54.382348Z",
     "iopub.status.busy": "2024-07-20T17:13:54.381954Z",
     "iopub.status.idle": "2024-07-20T17:13:54.412136Z",
     "shell.execute_reply": "2024-07-20T17:13:54.411015Z"
    },
    "papermill": {
     "duration": 0.040249,
     "end_time": "2024-07-20T17:13:54.414903",
     "exception": false,
     "start_time": "2024-07-20T17:13:54.374654",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MLP(\n",
      "  (fc1): Linear(in_features=8, out_features=256, bias=True)\n",
      "  (fc2): Linear(in_features=256, out_features=256, bias=True)\n",
      "  (fc3): Linear(in_features=256, out_features=256, bias=True)\n",
      "  (fc4): Linear(in_features=256, out_features=2, bias=True)\n",
      "  (relu): ReLU()\n",
      "  (dropout): Dropout(p=0.2, inplace=False)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "# Initialize model (3 hidden layers with 256 neurons each) with dropout\n",
    "\n",
    "class MLP(nn.Module):\n",
    "    def __init__(self, *args, **kwargs) -> None:\n",
    "        super().__init__(*args, **kwargs)\n",
    "        self.fc1 = nn.Linear(8, 256)\n",
    "        self.fc2 = nn.Linear(256, 256)\n",
    "        self.fc3 = nn.Linear(256, 256)\n",
    "        self.fc4 = nn.Linear(256, 2)\n",
    "        self.relu = nn.ReLU()\n",
    "        self.dropout = nn.Dropout(0.2)\n",
    "\n",
    "    def forward(self, x):\n",
    "        x = self.fc1(x)\n",
    "        x = self.relu(x)\n",
    "        x = self.dropout(x)\n",
    "        x = self.fc2(x)\n",
    "        x = self.relu(x)\n",
    "        x = self.dropout(x)\n",
    "        x = self.fc3(x)\n",
    "        x = self.relu(x)\n",
    "        x = self.dropout(x)\n",
    "        x = self.fc4(x)\n",
    "        return x\n",
    "    \n",
    "model = MLP()\n",
    "print(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ce28eed6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:13:54.428837Z",
     "iopub.status.busy": "2024-07-20T17:13:54.428424Z",
     "iopub.status.idle": "2024-07-20T17:13:56.011168Z",
     "shell.execute_reply": "2024-07-20T17:13:56.009839Z"
    },
    "papermill": {
     "duration": 1.592995,
     "end_time": "2024-07-20T17:13:56.013860",
     "exception": false,
     "start_time": "2024-07-20T17:13:54.420865",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of parameters: 134402\n"
     ]
    }
   ],
   "source": [
    "# Initialize loss function and optimizer\n",
    "criterion = nn.CrossEntropyLoss()\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=0.004)\n",
    "print(f\"Number of parameters: {sum(p.numel() for p in model.parameters())}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "efaaaf96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:13:56.028637Z",
     "iopub.status.busy": "2024-07-20T17:13:56.027419Z",
     "iopub.status.idle": "2024-07-20T17:15:00.890714Z",
     "shell.execute_reply": "2024-07-20T17:15:00.889458Z"
    },
    "papermill": {
     "duration": 64.873512,
     "end_time": "2024-07-20T17:15:00.893482",
     "exception": false,
     "start_time": "2024-07-20T17:13:56.019970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/500 | Train loss: 7.3948 | Train accuracy: 0.5204 | Val loss: 0.7027 | Val accuracy: 0.5913\n",
      "Epoch 2/500 | Train loss: 0.7426 | Train accuracy: 0.5924 | Val loss: 0.6764 | Val accuracy: 0.5877\n",
      "Epoch 3/500 | Train loss: 0.7127 | Train accuracy: 0.5707 | Val loss: 0.6991 | Val accuracy: 0.3739\n",
      "Epoch 4/500 | Train loss: 0.6872 | Train accuracy: 0.6141 | Val loss: 0.6649 | Val accuracy: 0.5877\n",
      "Epoch 5/500 | Train loss: 0.6678 | Train accuracy: 0.6332 | Val loss: 0.6596 | Val accuracy: 0.5981\n",
      "Epoch 6/500 | Train loss: 0.6670 | Train accuracy: 0.6223 | Val loss: 0.6547 | Val accuracy: 0.6086\n",
      "Epoch 7/500 | Train loss: 0.6419 | Train accuracy: 0.6454 | Val loss: 0.6679 | Val accuracy: 0.5981\n",
      "Epoch 8/500 | Train loss: 0.6489 | Train accuracy: 0.6658 | Val loss: 0.6290 | Val accuracy: 0.6261\n",
      "Epoch 9/500 | Train loss: 0.6511 | Train accuracy: 0.6236 | Val loss: 0.7445 | Val accuracy: 0.6086\n",
      "Epoch 10/500 | Train loss: 0.6773 | Train accuracy: 0.6399 | Val loss: 0.7073 | Val accuracy: 0.4940\n",
      "Epoch 11/500 | Train loss: 0.6552 | Train accuracy: 0.6495 | Val loss: 0.6444 | Val accuracy: 0.6033\n",
      "Epoch 12/500 | Train loss: 0.6400 | Train accuracy: 0.6590 | Val loss: 0.6106 | Val accuracy: 0.6765\n",
      "Epoch 13/500 | Train loss: 0.6454 | Train accuracy: 0.6726 | Val loss: 0.6338 | Val accuracy: 0.6678\n",
      "Epoch 14/500 | Train loss: 0.6353 | Train accuracy: 0.6535 | Val loss: 0.6034 | Val accuracy: 0.6834\n",
      "Epoch 15/500 | Train loss: 0.6303 | Train accuracy: 0.6359 | Val loss: 0.6194 | Val accuracy: 0.6033\n",
      "Epoch 16/500 | Train loss: 0.6369 | Train accuracy: 0.6739 | Val loss: 0.6436 | Val accuracy: 0.6138\n",
      "Epoch 17/500 | Train loss: 0.6329 | Train accuracy: 0.6576 | Val loss: 0.6145 | Val accuracy: 0.7146\n",
      "Epoch 18/500 | Train loss: 0.6216 | Train accuracy: 0.6753 | Val loss: 0.6100 | Val accuracy: 0.6642\n",
      "Epoch 19/500 | Train loss: 0.6161 | Train accuracy: 0.6726 | Val loss: 0.6101 | Val accuracy: 0.6798\n",
      "Epoch 20/500 | Train loss: 0.6200 | Train accuracy: 0.6766 | Val loss: 0.5888 | Val accuracy: 0.6886\n",
      "Epoch 21/500 | Train loss: 0.6051 | Train accuracy: 0.6834 | Val loss: 0.5823 | Val accuracy: 0.6798\n",
      "Epoch 22/500 | Train loss: 0.6327 | Train accuracy: 0.6726 | Val loss: 0.5983 | Val accuracy: 0.6782\n",
      "Epoch 23/500 | Train loss: 0.6161 | Train accuracy: 0.6753 | Val loss: 0.6212 | Val accuracy: 0.6658\n",
      "Epoch 24/500 | Train loss: 0.6274 | Train accuracy: 0.6793 | Val loss: 0.5879 | Val accuracy: 0.7146\n",
      "Epoch 25/500 | Train loss: 0.6213 | Train accuracy: 0.6603 | Val loss: 0.5804 | Val accuracy: 0.6902\n",
      "Epoch 26/500 | Train loss: 0.6004 | Train accuracy: 0.6766 | Val loss: 0.5650 | Val accuracy: 0.6886\n",
      "Epoch 27/500 | Train loss: 0.5960 | Train accuracy: 0.6943 | Val loss: 0.5779 | Val accuracy: 0.7163\n",
      "Epoch 28/500 | Train loss: 0.5793 | Train accuracy: 0.6916 | Val loss: 0.5643 | Val accuracy: 0.6694\n",
      "Epoch 29/500 | Train loss: 0.6020 | Train accuracy: 0.6753 | Val loss: 0.6113 | Val accuracy: 0.6746\n",
      "Epoch 30/500 | Train loss: 0.6031 | Train accuracy: 0.6793 | Val loss: 0.6184 | Val accuracy: 0.5981\n",
      "Epoch 31/500 | Train loss: 0.6083 | Train accuracy: 0.7011 | Val loss: 0.5626 | Val accuracy: 0.6434\n",
      "Epoch 32/500 | Train loss: 0.6193 | Train accuracy: 0.6658 | Val loss: 0.5688 | Val accuracy: 0.7303\n",
      "Epoch 33/500 | Train loss: 0.6274 | Train accuracy: 0.6440 | Val loss: 0.6462 | Val accuracy: 0.6242\n",
      "Epoch 34/500 | Train loss: 0.6025 | Train accuracy: 0.6916 | Val loss: 0.6320 | Val accuracy: 0.6086\n",
      "Epoch 35/500 | Train loss: 0.5988 | Train accuracy: 0.7133 | Val loss: 0.5232 | Val accuracy: 0.6990\n",
      "Epoch 36/500 | Train loss: 0.5902 | Train accuracy: 0.6875 | Val loss: 0.5518 | Val accuracy: 0.6938\n",
      "Epoch 37/500 | Train loss: 0.5513 | Train accuracy: 0.7188 | Val loss: 0.5155 | Val accuracy: 0.7303\n",
      "Epoch 38/500 | Train loss: 0.5813 | Train accuracy: 0.6970 | Val loss: 0.5274 | Val accuracy: 0.7478\n",
      "Epoch 39/500 | Train loss: 0.5647 | Train accuracy: 0.7215 | Val loss: 0.5158 | Val accuracy: 0.7390\n",
      "Epoch 40/500 | Train loss: 0.5659 | Train accuracy: 0.7228 | Val loss: 0.5361 | Val accuracy: 0.7878\n",
      "Epoch 41/500 | Train loss: 0.5618 | Train accuracy: 0.7160 | Val loss: 0.5106 | Val accuracy: 0.7146\n",
      "Epoch 42/500 | Train loss: 0.5547 | Train accuracy: 0.7215 | Val loss: 0.5122 | Val accuracy: 0.7514\n",
      "Epoch 43/500 | Train loss: 0.5580 | Train accuracy: 0.7011 | Val loss: 0.4911 | Val accuracy: 0.8174\n",
      "Epoch 44/500 | Train loss: 0.5810 | Train accuracy: 0.7242 | Val loss: 0.5403 | Val accuracy: 0.6886\n",
      "Epoch 45/500 | Train loss: 0.5423 | Train accuracy: 0.7473 | Val loss: 0.4957 | Val accuracy: 0.7791\n",
      "Epoch 46/500 | Train loss: 0.5400 | Train accuracy: 0.7554 | Val loss: 0.4993 | Val accuracy: 0.7686\n",
      "Epoch 47/500 | Train loss: 0.5471 | Train accuracy: 0.7473 | Val loss: 0.4566 | Val accuracy: 0.7947\n",
      "Epoch 48/500 | Train loss: 0.6304 | Train accuracy: 0.7024 | Val loss: 0.5330 | Val accuracy: 0.7042\n",
      "Epoch 49/500 | Train loss: 0.5838 | Train accuracy: 0.7296 | Val loss: 0.5590 | Val accuracy: 0.7843\n",
      "Epoch 50/500 | Train loss: 0.5514 | Train accuracy: 0.7283 | Val loss: 0.5452 | Val accuracy: 0.7582\n",
      "Epoch 51/500 | Train loss: 0.5449 | Train accuracy: 0.7446 | Val loss: 0.4943 | Val accuracy: 0.7791\n",
      "Epoch 52/500 | Train loss: 0.5445 | Train accuracy: 0.7405 | Val loss: 0.4971 | Val accuracy: 0.7755\n",
      "Epoch 53/500 | Train loss: 0.5526 | Train accuracy: 0.7364 | Val loss: 0.5397 | Val accuracy: 0.7651\n",
      "Epoch 54/500 | Train loss: 0.5475 | Train accuracy: 0.7459 | Val loss: 0.5296 | Val accuracy: 0.7755\n",
      "Epoch 55/500 | Train loss: 0.5706 | Train accuracy: 0.7228 | Val loss: 0.5886 | Val accuracy: 0.7061\n",
      "Epoch 56/500 | Train loss: 0.5838 | Train accuracy: 0.7283 | Val loss: 0.5605 | Val accuracy: 0.7374\n",
      "Epoch 57/500 | Train loss: 0.5849 | Train accuracy: 0.7188 | Val loss: 0.4989 | Val accuracy: 0.7999\n",
      "Epoch 58/500 | Train loss: 0.5178 | Train accuracy: 0.7432 | Val loss: 0.4796 | Val accuracy: 0.7843\n",
      "Epoch 59/500 | Train loss: 0.5501 | Train accuracy: 0.7486 | Val loss: 0.4815 | Val accuracy: 0.7738\n",
      "Epoch 60/500 | Train loss: 0.5827 | Train accuracy: 0.6562 | Val loss: 0.5786 | Val accuracy: 0.6573\n",
      "Epoch 61/500 | Train loss: 0.5631 | Train accuracy: 0.7120 | Val loss: 0.4970 | Val accuracy: 0.7843\n",
      "Epoch 62/500 | Train loss: 0.5180 | Train accuracy: 0.7486 | Val loss: 0.4705 | Val accuracy: 0.7999\n",
      "Epoch 63/500 | Train loss: 0.5065 | Train accuracy: 0.7595 | Val loss: 0.4656 | Val accuracy: 0.7947\n",
      "Epoch 64/500 | Train loss: 0.5086 | Train accuracy: 0.7595 | Val loss: 0.4513 | Val accuracy: 0.7999\n",
      "Epoch 65/500 | Train loss: 0.4947 | Train accuracy: 0.7541 | Val loss: 0.4869 | Val accuracy: 0.7999\n",
      "Epoch 66/500 | Train loss: 0.4721 | Train accuracy: 0.7908 | Val loss: 0.4494 | Val accuracy: 0.7947\n",
      "Epoch 67/500 | Train loss: 0.4951 | Train accuracy: 0.7799 | Val loss: 0.4533 | Val accuracy: 0.8051\n",
      "Epoch 68/500 | Train loss: 0.5299 | Train accuracy: 0.7649 | Val loss: 0.4794 | Val accuracy: 0.7982\n",
      "Epoch 69/500 | Train loss: 0.4941 | Train accuracy: 0.7758 | Val loss: 0.4641 | Val accuracy: 0.7843\n",
      "Epoch 70/500 | Train loss: 0.4900 | Train accuracy: 0.7772 | Val loss: 0.4579 | Val accuracy: 0.8087\n",
      "Epoch 71/500 | Train loss: 0.4832 | Train accuracy: 0.7717 | Val loss: 0.4807 | Val accuracy: 0.7791\n",
      "Epoch 72/500 | Train loss: 0.4981 | Train accuracy: 0.7731 | Val loss: 0.4740 | Val accuracy: 0.7738\n",
      "Epoch 73/500 | Train loss: 0.4708 | Train accuracy: 0.7935 | Val loss: 0.4790 | Val accuracy: 0.8051\n",
      "Epoch 74/500 | Train loss: 0.4912 | Train accuracy: 0.7812 | Val loss: 0.4802 | Val accuracy: 0.8051\n",
      "Epoch 75/500 | Train loss: 0.4820 | Train accuracy: 0.7840 | Val loss: 0.5080 | Val accuracy: 0.7530\n",
      "Epoch 76/500 | Train loss: 0.5129 | Train accuracy: 0.7731 | Val loss: 0.4787 | Val accuracy: 0.7947\n",
      "Epoch 77/500 | Train loss: 0.4974 | Train accuracy: 0.7690 | Val loss: 0.4544 | Val accuracy: 0.7843\n",
      "Epoch 78/500 | Train loss: 0.4780 | Train accuracy: 0.7772 | Val loss: 0.4648 | Val accuracy: 0.7999\n",
      "Epoch 79/500 | Train loss: 0.5128 | Train accuracy: 0.7609 | Val loss: 0.5201 | Val accuracy: 0.7791\n",
      "Epoch 80/500 | Train loss: 0.4981 | Train accuracy: 0.7568 | Val loss: 0.4521 | Val accuracy: 0.7947\n",
      "Epoch 81/500 | Train loss: 0.5097 | Train accuracy: 0.7785 | Val loss: 0.5671 | Val accuracy: 0.7930\n",
      "Epoch 82/500 | Train loss: 0.4789 | Train accuracy: 0.7880 | Val loss: 0.4879 | Val accuracy: 0.7911\n",
      "Epoch 83/500 | Train loss: 0.5103 | Train accuracy: 0.7772 | Val loss: 0.5248 | Val accuracy: 0.7703\n",
      "Epoch 84/500 | Train loss: 0.5186 | Train accuracy: 0.7745 | Val loss: 0.4949 | Val accuracy: 0.7791\n",
      "Epoch 85/500 | Train loss: 0.4897 | Train accuracy: 0.7826 | Val loss: 0.4508 | Val accuracy: 0.7791\n",
      "Epoch 86/500 | Train loss: 0.5008 | Train accuracy: 0.7772 | Val loss: 0.4518 | Val accuracy: 0.7878\n",
      "Epoch 87/500 | Train loss: 0.4841 | Train accuracy: 0.7717 | Val loss: 0.4705 | Val accuracy: 0.7843\n",
      "Epoch 88/500 | Train loss: 0.4581 | Train accuracy: 0.8016 | Val loss: 0.4372 | Val accuracy: 0.8155\n",
      "Epoch 89/500 | Train loss: 0.4889 | Train accuracy: 0.7799 | Val loss: 0.5077 | Val accuracy: 0.7390\n",
      "Epoch 90/500 | Train loss: 0.5240 | Train accuracy: 0.7717 | Val loss: 0.4778 | Val accuracy: 0.7738\n",
      "Epoch 91/500 | Train loss: 0.4783 | Train accuracy: 0.7989 | Val loss: 0.4542 | Val accuracy: 0.7774\n",
      "Epoch 92/500 | Train loss: 0.4667 | Train accuracy: 0.7880 | Val loss: 0.4474 | Val accuracy: 0.7826\n",
      "Epoch 93/500 | Train loss: 0.4777 | Train accuracy: 0.7921 | Val loss: 0.4694 | Val accuracy: 0.7947\n",
      "Epoch 94/500 | Train loss: 0.4507 | Train accuracy: 0.7880 | Val loss: 0.4554 | Val accuracy: 0.7791\n",
      "Epoch 95/500 | Train loss: 0.4728 | Train accuracy: 0.7894 | Val loss: 0.4604 | Val accuracy: 0.7947\n",
      "Epoch 96/500 | Train loss: 0.4639 | Train accuracy: 0.7962 | Val loss: 0.4695 | Val accuracy: 0.8120\n",
      "Epoch 97/500 | Train loss: 0.4936 | Train accuracy: 0.7772 | Val loss: 0.4905 | Val accuracy: 0.7791\n",
      "Epoch 98/500 | Train loss: 0.5037 | Train accuracy: 0.7636 | Val loss: 0.4980 | Val accuracy: 0.7843\n",
      "Epoch 99/500 | Train loss: 0.4687 | Train accuracy: 0.8030 | Val loss: 0.4495 | Val accuracy: 0.7791\n",
      "Epoch 100/500 | Train loss: 0.4580 | Train accuracy: 0.7880 | Val loss: 0.4742 | Val accuracy: 0.7911\n",
      "Epoch 101/500 | Train loss: 0.5175 | Train accuracy: 0.7649 | Val loss: 0.4823 | Val accuracy: 0.7651\n",
      "Epoch 102/500 | Train loss: 0.5914 | Train accuracy: 0.7772 | Val loss: 0.5935 | Val accuracy: 0.7303\n",
      "Epoch 103/500 | Train loss: 0.5090 | Train accuracy: 0.7853 | Val loss: 0.4693 | Val accuracy: 0.7791\n",
      "Epoch 104/500 | Train loss: 0.4906 | Train accuracy: 0.7962 | Val loss: 0.4577 | Val accuracy: 0.7651\n",
      "Epoch 105/500 | Train loss: 0.4829 | Train accuracy: 0.7989 | Val loss: 0.4619 | Val accuracy: 0.7843\n",
      "Epoch 106/500 | Train loss: 0.4805 | Train accuracy: 0.7867 | Val loss: 0.4520 | Val accuracy: 0.7651\n",
      "Epoch 107/500 | Train loss: 0.5011 | Train accuracy: 0.7785 | Val loss: 0.4903 | Val accuracy: 0.7703\n",
      "Epoch 108/500 | Train loss: 0.4723 | Train accuracy: 0.7731 | Val loss: 0.4575 | Val accuracy: 0.7755\n",
      "Epoch 109/500 | Train loss: 0.4838 | Train accuracy: 0.7663 | Val loss: 0.4895 | Val accuracy: 0.7495\n",
      "Epoch 110/500 | Train loss: 0.4679 | Train accuracy: 0.7989 | Val loss: 0.5073 | Val accuracy: 0.7755\n",
      "Epoch 111/500 | Train loss: 0.4879 | Train accuracy: 0.7717 | Val loss: 0.4663 | Val accuracy: 0.7947\n",
      "Epoch 112/500 | Train loss: 0.4881 | Train accuracy: 0.7853 | Val loss: 0.5333 | Val accuracy: 0.7755\n",
      "Epoch 113/500 | Train loss: 0.4783 | Train accuracy: 0.7880 | Val loss: 0.4400 | Val accuracy: 0.7982\n",
      "Epoch 114/500 | Train loss: 0.4860 | Train accuracy: 0.7853 | Val loss: 0.4811 | Val accuracy: 0.7963\n",
      "Epoch 115/500 | Train loss: 0.4703 | Train accuracy: 0.7853 | Val loss: 0.4713 | Val accuracy: 0.7999\n",
      "Epoch 116/500 | Train loss: 0.4907 | Train accuracy: 0.7867 | Val loss: 0.4593 | Val accuracy: 0.7791\n",
      "Epoch 117/500 | Train loss: 0.4821 | Train accuracy: 0.7758 | Val loss: 0.5429 | Val accuracy: 0.7286\n",
      "Epoch 118/500 | Train loss: 0.4994 | Train accuracy: 0.7677 | Val loss: 0.5996 | Val accuracy: 0.7547\n",
      "Epoch 119/500 | Train loss: 0.6503 | Train accuracy: 0.7717 | Val loss: 0.5160 | Val accuracy: 0.7511\n",
      "Epoch 120/500 | Train loss: 0.5065 | Train accuracy: 0.7704 | Val loss: 0.4650 | Val accuracy: 0.8051\n",
      "Epoch 121/500 | Train loss: 0.4958 | Train accuracy: 0.7690 | Val loss: 0.4893 | Val accuracy: 0.7651\n",
      "Epoch 122/500 | Train loss: 0.4978 | Train accuracy: 0.7840 | Val loss: 0.4940 | Val accuracy: 0.7999\n",
      "Epoch 123/500 | Train loss: 0.4749 | Train accuracy: 0.7935 | Val loss: 0.4968 | Val accuracy: 0.7547\n",
      "Epoch 124/500 | Train loss: 0.4756 | Train accuracy: 0.7785 | Val loss: 0.4441 | Val accuracy: 0.7843\n",
      "Epoch 125/500 | Train loss: 0.4739 | Train accuracy: 0.7853 | Val loss: 0.4466 | Val accuracy: 0.7791\n",
      "Epoch 126/500 | Train loss: 0.4756 | Train accuracy: 0.7840 | Val loss: 0.4792 | Val accuracy: 0.7807\n",
      "Epoch 127/500 | Train loss: 0.4677 | Train accuracy: 0.7989 | Val loss: 0.4845 | Val accuracy: 0.7738\n",
      "Epoch 128/500 | Train loss: 0.4929 | Train accuracy: 0.7880 | Val loss: 0.4758 | Val accuracy: 0.7547\n",
      "Epoch 129/500 | Train loss: 0.4842 | Train accuracy: 0.7758 | Val loss: 0.4395 | Val accuracy: 0.7895\n",
      "Epoch 130/500 | Train loss: 0.4599 | Train accuracy: 0.8003 | Val loss: 0.4635 | Val accuracy: 0.7859\n",
      "Epoch 131/500 | Train loss: 0.5378 | Train accuracy: 0.7541 | Val loss: 0.4808 | Val accuracy: 0.7823\n",
      "Epoch 132/500 | Train loss: 0.4942 | Train accuracy: 0.7432 | Val loss: 0.4777 | Val accuracy: 0.7963\n",
      "Epoch 133/500 | Train loss: 0.4695 | Train accuracy: 0.7921 | Val loss: 0.4917 | Val accuracy: 0.7755\n",
      "Epoch 134/500 | Train loss: 0.4620 | Train accuracy: 0.8111 | Val loss: 0.5460 | Val accuracy: 0.7686\n",
      "Epoch 135/500 | Train loss: 0.4706 | Train accuracy: 0.7989 | Val loss: 0.5088 | Val accuracy: 0.7599\n",
      "Epoch 136/500 | Train loss: 0.5122 | Train accuracy: 0.7772 | Val loss: 0.4891 | Val accuracy: 0.7876\n",
      "Epoch 137/500 | Train loss: 0.4903 | Train accuracy: 0.7758 | Val loss: 0.4459 | Val accuracy: 0.7843\n",
      "Epoch 138/500 | Train loss: 0.4712 | Train accuracy: 0.7785 | Val loss: 0.4570 | Val accuracy: 0.7651\n",
      "Epoch 139/500 | Train loss: 0.4865 | Train accuracy: 0.7758 | Val loss: 0.4513 | Val accuracy: 0.7791\n",
      "Epoch 140/500 | Train loss: 0.4669 | Train accuracy: 0.7894 | Val loss: 0.4559 | Val accuracy: 0.7755\n",
      "Epoch 141/500 | Train loss: 0.4784 | Train accuracy: 0.7663 | Val loss: 0.4577 | Val accuracy: 0.7755\n",
      "Epoch 142/500 | Train loss: 0.4913 | Train accuracy: 0.7812 | Val loss: 0.4337 | Val accuracy: 0.7999\n",
      "Epoch 143/500 | Train loss: 0.5020 | Train accuracy: 0.7799 | Val loss: 0.4599 | Val accuracy: 0.7651\n",
      "Epoch 144/500 | Train loss: 0.4619 | Train accuracy: 0.7921 | Val loss: 0.4250 | Val accuracy: 0.7947\n",
      "Epoch 145/500 | Train loss: 0.4580 | Train accuracy: 0.7908 | Val loss: 0.4624 | Val accuracy: 0.8067\n",
      "Epoch 146/500 | Train loss: 0.4695 | Train accuracy: 0.7853 | Val loss: 0.4546 | Val accuracy: 0.7859\n",
      "Epoch 147/500 | Train loss: 0.4601 | Train accuracy: 0.7989 | Val loss: 0.4468 | Val accuracy: 0.7895\n",
      "Epoch 148/500 | Train loss: 0.4500 | Train accuracy: 0.8030 | Val loss: 0.4661 | Val accuracy: 0.7895\n",
      "Epoch 149/500 | Train loss: 0.4624 | Train accuracy: 0.7745 | Val loss: 0.4713 | Val accuracy: 0.8051\n",
      "Epoch 150/500 | Train loss: 0.4684 | Train accuracy: 0.7935 | Val loss: 0.4687 | Val accuracy: 0.7686\n",
      "Epoch 151/500 | Train loss: 0.4503 | Train accuracy: 0.8043 | Val loss: 0.4490 | Val accuracy: 0.7791\n",
      "Epoch 152/500 | Train loss: 0.4527 | Train accuracy: 0.8003 | Val loss: 0.4982 | Val accuracy: 0.7755\n",
      "Epoch 153/500 | Train loss: 0.4696 | Train accuracy: 0.7880 | Val loss: 0.4713 | Val accuracy: 0.7703\n",
      "Epoch 154/500 | Train loss: 0.4827 | Train accuracy: 0.7894 | Val loss: 0.4799 | Val accuracy: 0.7755\n",
      "Epoch 155/500 | Train loss: 0.4640 | Train accuracy: 0.7880 | Val loss: 0.4679 | Val accuracy: 0.7859\n",
      "Epoch 156/500 | Train loss: 0.4496 | Train accuracy: 0.8111 | Val loss: 0.4743 | Val accuracy: 0.7755\n",
      "Epoch 157/500 | Train loss: 0.4781 | Train accuracy: 0.7921 | Val loss: 0.4866 | Val accuracy: 0.7771\n",
      "Epoch 158/500 | Train loss: 0.4532 | Train accuracy: 0.7812 | Val loss: 0.4986 | Val accuracy: 0.7843\n",
      "Epoch 159/500 | Train loss: 0.4276 | Train accuracy: 0.8030 | Val loss: 0.4644 | Val accuracy: 0.7911\n",
      "Epoch 160/500 | Train loss: 0.4838 | Train accuracy: 0.7867 | Val loss: 0.4667 | Val accuracy: 0.7911\n",
      "Epoch 161/500 | Train loss: 0.4898 | Train accuracy: 0.7908 | Val loss: 0.5006 | Val accuracy: 0.7651\n",
      "Epoch 162/500 | Train loss: 0.4793 | Train accuracy: 0.7935 | Val loss: 0.4941 | Val accuracy: 0.7703\n",
      "Epoch 163/500 | Train loss: 0.4780 | Train accuracy: 0.7989 | Val loss: 0.5040 | Val accuracy: 0.7651\n",
      "Epoch 164/500 | Train loss: 0.4522 | Train accuracy: 0.8016 | Val loss: 0.4584 | Val accuracy: 0.7703\n",
      "Epoch 165/500 | Train loss: 0.4865 | Train accuracy: 0.7785 | Val loss: 0.4623 | Val accuracy: 0.7615\n",
      "Epoch 166/500 | Train loss: 0.4769 | Train accuracy: 0.7976 | Val loss: 0.4507 | Val accuracy: 0.7771\n",
      "Epoch 167/500 | Train loss: 0.4409 | Train accuracy: 0.8084 | Val loss: 0.4749 | Val accuracy: 0.7703\n",
      "Epoch 168/500 | Train loss: 0.4599 | Train accuracy: 0.7962 | Val loss: 0.5127 | Val accuracy: 0.7651\n",
      "Epoch 169/500 | Train loss: 0.4698 | Train accuracy: 0.7921 | Val loss: 0.4431 | Val accuracy: 0.7755\n",
      "Epoch 170/500 | Train loss: 0.4575 | Train accuracy: 0.7948 | Val loss: 0.4686 | Val accuracy: 0.7895\n",
      "Epoch 171/500 | Train loss: 0.4734 | Train accuracy: 0.7867 | Val loss: 0.4557 | Val accuracy: 0.7843\n",
      "Epoch 172/500 | Train loss: 0.4687 | Train accuracy: 0.7908 | Val loss: 0.4413 | Val accuracy: 0.7826\n",
      "Epoch 173/500 | Train loss: 0.4629 | Train accuracy: 0.7799 | Val loss: 0.4885 | Val accuracy: 0.7791\n",
      "Epoch 174/500 | Train loss: 0.4762 | Train accuracy: 0.8003 | Val loss: 0.4521 | Val accuracy: 0.7791\n",
      "Epoch 175/500 | Train loss: 0.4621 | Train accuracy: 0.7935 | Val loss: 0.4696 | Val accuracy: 0.7807\n",
      "Epoch 176/500 | Train loss: 0.4364 | Train accuracy: 0.8315 | Val loss: 0.4892 | Val accuracy: 0.7738\n",
      "Epoch 177/500 | Train loss: 0.4900 | Train accuracy: 0.7962 | Val loss: 0.4659 | Val accuracy: 0.7530\n",
      "Epoch 178/500 | Train loss: 0.4768 | Train accuracy: 0.7935 | Val loss: 0.4855 | Val accuracy: 0.7634\n",
      "Epoch 179/500 | Train loss: 0.4616 | Train accuracy: 0.7962 | Val loss: 0.4786 | Val accuracy: 0.7686\n",
      "Epoch 180/500 | Train loss: 0.4529 | Train accuracy: 0.7880 | Val loss: 0.4955 | Val accuracy: 0.7738\n",
      "Epoch 181/500 | Train loss: 0.4732 | Train accuracy: 0.8098 | Val loss: 0.5164 | Val accuracy: 0.7738\n",
      "Epoch 182/500 | Train loss: 0.4847 | Train accuracy: 0.7921 | Val loss: 0.4744 | Val accuracy: 0.7738\n",
      "Epoch 183/500 | Train loss: 0.4462 | Train accuracy: 0.7921 | Val loss: 0.4432 | Val accuracy: 0.7738\n",
      "Epoch 184/500 | Train loss: 0.4626 | Train accuracy: 0.8043 | Val loss: 0.4659 | Val accuracy: 0.7843\n",
      "Epoch 185/500 | Train loss: 0.4789 | Train accuracy: 0.7976 | Val loss: 0.4928 | Val accuracy: 0.7651\n",
      "Epoch 186/500 | Train loss: 0.4719 | Train accuracy: 0.7853 | Val loss: 0.4542 | Val accuracy: 0.7843\n",
      "Epoch 187/500 | Train loss: 0.4488 | Train accuracy: 0.7935 | Val loss: 0.4888 | Val accuracy: 0.7791\n",
      "Epoch 188/500 | Train loss: 0.4445 | Train accuracy: 0.8057 | Val loss: 0.4623 | Val accuracy: 0.7651\n",
      "Epoch 189/500 | Train loss: 0.4676 | Train accuracy: 0.7880 | Val loss: 0.5435 | Val accuracy: 0.7651\n",
      "Epoch 190/500 | Train loss: 0.4403 | Train accuracy: 0.8071 | Val loss: 0.5423 | Val accuracy: 0.7703\n",
      "Epoch 191/500 | Train loss: 0.4469 | Train accuracy: 0.7812 | Val loss: 0.4362 | Val accuracy: 0.7791\n",
      "Epoch 192/500 | Train loss: 0.4598 | Train accuracy: 0.8057 | Val loss: 0.5153 | Val accuracy: 0.7843\n",
      "Epoch 193/500 | Train loss: 0.5071 | Train accuracy: 0.7840 | Val loss: 0.4662 | Val accuracy: 0.7807\n",
      "Epoch 194/500 | Train loss: 0.4805 | Train accuracy: 0.7826 | Val loss: 0.4629 | Val accuracy: 0.7911\n",
      "Epoch 195/500 | Train loss: 0.4935 | Train accuracy: 0.7731 | Val loss: 0.4281 | Val accuracy: 0.7738\n",
      "Epoch 196/500 | Train loss: 0.4381 | Train accuracy: 0.8016 | Val loss: 0.4408 | Val accuracy: 0.7999\n",
      "Epoch 197/500 | Train loss: 0.4912 | Train accuracy: 0.7622 | Val loss: 0.4509 | Val accuracy: 0.7686\n",
      "Epoch 198/500 | Train loss: 0.4611 | Train accuracy: 0.7948 | Val loss: 0.4689 | Val accuracy: 0.7738\n",
      "Epoch 199/500 | Train loss: 0.4429 | Train accuracy: 0.8152 | Val loss: 0.4324 | Val accuracy: 0.7982\n",
      "Epoch 200/500 | Train loss: 0.4568 | Train accuracy: 0.7867 | Val loss: 0.4618 | Val accuracy: 0.7599\n",
      "Epoch 201/500 | Train loss: 0.4627 | Train accuracy: 0.7853 | Val loss: 0.5148 | Val accuracy: 0.7599\n",
      "Epoch 202/500 | Train loss: 0.4532 | Train accuracy: 0.7880 | Val loss: 0.4484 | Val accuracy: 0.7843\n",
      "Epoch 203/500 | Train loss: 0.4649 | Train accuracy: 0.7976 | Val loss: 0.4737 | Val accuracy: 0.7738\n",
      "Epoch 204/500 | Train loss: 0.4626 | Train accuracy: 0.8003 | Val loss: 0.4788 | Val accuracy: 0.7686\n",
      "Epoch 205/500 | Train loss: 0.4575 | Train accuracy: 0.8084 | Val loss: 0.4627 | Val accuracy: 0.7686\n",
      "Epoch 206/500 | Train loss: 0.4433 | Train accuracy: 0.8003 | Val loss: 0.4782 | Val accuracy: 0.7738\n",
      "Epoch 207/500 | Train loss: 0.4753 | Train accuracy: 0.7867 | Val loss: 0.5141 | Val accuracy: 0.7791\n",
      "Epoch 208/500 | Train loss: 0.4806 | Train accuracy: 0.7921 | Val loss: 0.5379 | Val accuracy: 0.7599\n",
      "Epoch 209/500 | Train loss: 0.4376 | Train accuracy: 0.8003 | Val loss: 0.4614 | Val accuracy: 0.7738\n",
      "Epoch 210/500 | Train loss: 0.4636 | Train accuracy: 0.7962 | Val loss: 0.5077 | Val accuracy: 0.7599\n",
      "Epoch 211/500 | Train loss: 0.4341 | Train accuracy: 0.8098 | Val loss: 0.5305 | Val accuracy: 0.7599\n",
      "Epoch 212/500 | Train loss: 0.4426 | Train accuracy: 0.8139 | Val loss: 0.5305 | Val accuracy: 0.7599\n",
      "Epoch 213/500 | Train loss: 0.4712 | Train accuracy: 0.7976 | Val loss: 0.5412 | Val accuracy: 0.7703\n",
      "Epoch 214/500 | Train loss: 0.4397 | Train accuracy: 0.7935 | Val loss: 0.4718 | Val accuracy: 0.7895\n",
      "Epoch 215/500 | Train loss: 0.4590 | Train accuracy: 0.7948 | Val loss: 0.5227 | Val accuracy: 0.7738\n",
      "Epoch 216/500 | Train loss: 0.4624 | Train accuracy: 0.7989 | Val loss: 0.5093 | Val accuracy: 0.7651\n",
      "Epoch 217/500 | Train loss: 0.4484 | Train accuracy: 0.7948 | Val loss: 0.4897 | Val accuracy: 0.7807\n",
      "Epoch 218/500 | Train loss: 0.4397 | Train accuracy: 0.8152 | Val loss: 0.4789 | Val accuracy: 0.7895\n",
      "Epoch 219/500 | Train loss: 0.4472 | Train accuracy: 0.8030 | Val loss: 0.4545 | Val accuracy: 0.7843\n",
      "Epoch 220/500 | Train loss: 0.4356 | Train accuracy: 0.8057 | Val loss: 0.5626 | Val accuracy: 0.7547\n",
      "Epoch 221/500 | Train loss: 0.4161 | Train accuracy: 0.8139 | Val loss: 0.5636 | Val accuracy: 0.8067\n",
      "Epoch 222/500 | Train loss: 0.4577 | Train accuracy: 0.7867 | Val loss: 0.5774 | Val accuracy: 0.7703\n",
      "Epoch 223/500 | Train loss: 0.4432 | Train accuracy: 0.7989 | Val loss: 0.5334 | Val accuracy: 0.7755\n",
      "Epoch 224/500 | Train loss: 0.4643 | Train accuracy: 0.8003 | Val loss: 0.4456 | Val accuracy: 0.7791\n",
      "Epoch 225/500 | Train loss: 0.4423 | Train accuracy: 0.8043 | Val loss: 0.5046 | Val accuracy: 0.7807\n",
      "Epoch 226/500 | Train loss: 0.4413 | Train accuracy: 0.8207 | Val loss: 0.4829 | Val accuracy: 0.7843\n",
      "Epoch 227/500 | Train loss: 0.4413 | Train accuracy: 0.7867 | Val loss: 0.4708 | Val accuracy: 0.7791\n",
      "Epoch 228/500 | Train loss: 0.4266 | Train accuracy: 0.8084 | Val loss: 0.5199 | Val accuracy: 0.7755\n",
      "Epoch 229/500 | Train loss: 0.5713 | Train accuracy: 0.7894 | Val loss: 0.4779 | Val accuracy: 0.7719\n",
      "Epoch 230/500 | Train loss: 0.4699 | Train accuracy: 0.8071 | Val loss: 0.4883 | Val accuracy: 0.7547\n",
      "Epoch 231/500 | Train loss: 0.4548 | Train accuracy: 0.7908 | Val loss: 0.4647 | Val accuracy: 0.7823\n",
      "Epoch 232/500 | Train loss: 0.5625 | Train accuracy: 0.7405 | Val loss: 0.4837 | Val accuracy: 0.7911\n",
      "Epoch 233/500 | Train loss: 0.4754 | Train accuracy: 0.7948 | Val loss: 0.5012 | Val accuracy: 0.7703\n",
      "Epoch 234/500 | Train loss: 0.4534 | Train accuracy: 0.7989 | Val loss: 0.5433 | Val accuracy: 0.7547\n",
      "Epoch 235/500 | Train loss: 0.4602 | Train accuracy: 0.8016 | Val loss: 0.5496 | Val accuracy: 0.7738\n",
      "Epoch 236/500 | Train loss: 0.4829 | Train accuracy: 0.8111 | Val loss: 0.5353 | Val accuracy: 0.7667\n",
      "Epoch 237/500 | Train loss: 0.4577 | Train accuracy: 0.7894 | Val loss: 0.4936 | Val accuracy: 0.7755\n",
      "Epoch 238/500 | Train loss: 0.4573 | Train accuracy: 0.8003 | Val loss: 0.4671 | Val accuracy: 0.7719\n",
      "Epoch 239/500 | Train loss: 0.4934 | Train accuracy: 0.8043 | Val loss: 0.5439 | Val accuracy: 0.7651\n",
      "Epoch 240/500 | Train loss: 0.4905 | Train accuracy: 0.7962 | Val loss: 0.4561 | Val accuracy: 0.7667\n",
      "Epoch 241/500 | Train loss: 0.4819 | Train accuracy: 0.7989 | Val loss: 0.5302 | Val accuracy: 0.7876\n",
      "Epoch 242/500 | Train loss: 0.4772 | Train accuracy: 0.7989 | Val loss: 0.4810 | Val accuracy: 0.7859\n",
      "Epoch 243/500 | Train loss: 0.4719 | Train accuracy: 0.7962 | Val loss: 0.5264 | Val accuracy: 0.7495\n",
      "Epoch 244/500 | Train loss: 0.4674 | Train accuracy: 0.8043 | Val loss: 0.4850 | Val accuracy: 0.7651\n",
      "Epoch 245/500 | Train loss: 0.4666 | Train accuracy: 0.7962 | Val loss: 0.5136 | Val accuracy: 0.7495\n",
      "Epoch 246/500 | Train loss: 0.4899 | Train accuracy: 0.8057 | Val loss: 0.5345 | Val accuracy: 0.7651\n",
      "Epoch 247/500 | Train loss: 0.4676 | Train accuracy: 0.7908 | Val loss: 0.4787 | Val accuracy: 0.7807\n",
      "Epoch 248/500 | Train loss: 0.4676 | Train accuracy: 0.7921 | Val loss: 0.4870 | Val accuracy: 0.7719\n",
      "Epoch 249/500 | Train loss: 0.4403 | Train accuracy: 0.8098 | Val loss: 0.5123 | Val accuracy: 0.7703\n",
      "Epoch 250/500 | Train loss: 0.4524 | Train accuracy: 0.8016 | Val loss: 0.5262 | Val accuracy: 0.7615\n",
      "Epoch 251/500 | Train loss: 0.4491 | Train accuracy: 0.8098 | Val loss: 0.5101 | Val accuracy: 0.7755\n",
      "Epoch 252/500 | Train loss: 0.4625 | Train accuracy: 0.8043 | Val loss: 0.4836 | Val accuracy: 0.7703\n",
      "Epoch 253/500 | Train loss: 0.4517 | Train accuracy: 0.8071 | Val loss: 0.5112 | Val accuracy: 0.7791\n",
      "Epoch 254/500 | Train loss: 0.4437 | Train accuracy: 0.8030 | Val loss: 0.4861 | Val accuracy: 0.7895\n",
      "Epoch 255/500 | Train loss: 0.4504 | Train accuracy: 0.8166 | Val loss: 0.4823 | Val accuracy: 0.7878\n",
      "Epoch 256/500 | Train loss: 0.4713 | Train accuracy: 0.7989 | Val loss: 0.4854 | Val accuracy: 0.7843\n",
      "Epoch 257/500 | Train loss: 0.4396 | Train accuracy: 0.8152 | Val loss: 0.4597 | Val accuracy: 0.7947\n",
      "Epoch 258/500 | Train loss: 0.4597 | Train accuracy: 0.8003 | Val loss: 0.4743 | Val accuracy: 0.7755\n",
      "Epoch 259/500 | Train loss: 0.4395 | Train accuracy: 0.7880 | Val loss: 0.4673 | Val accuracy: 0.7703\n",
      "Epoch 260/500 | Train loss: 0.4558 | Train accuracy: 0.8057 | Val loss: 0.4697 | Val accuracy: 0.7459\n",
      "Epoch 261/500 | Train loss: 0.4351 | Train accuracy: 0.8084 | Val loss: 0.4682 | Val accuracy: 0.7703\n",
      "Epoch 262/500 | Train loss: 0.4306 | Train accuracy: 0.8152 | Val loss: 0.4911 | Val accuracy: 0.7511\n",
      "Epoch 263/500 | Train loss: 0.4274 | Train accuracy: 0.8179 | Val loss: 0.4718 | Val accuracy: 0.7738\n",
      "Epoch 264/500 | Train loss: 0.4461 | Train accuracy: 0.8193 | Val loss: 0.4816 | Val accuracy: 0.7634\n",
      "Epoch 265/500 | Train loss: 0.4289 | Train accuracy: 0.8098 | Val loss: 0.4929 | Val accuracy: 0.7686\n",
      "Epoch 266/500 | Train loss: 0.4447 | Train accuracy: 0.8152 | Val loss: 0.4869 | Val accuracy: 0.7807\n",
      "Epoch 267/500 | Train loss: 0.4300 | Train accuracy: 0.8220 | Val loss: 0.4734 | Val accuracy: 0.7478\n",
      "Epoch 268/500 | Train loss: 0.4657 | Train accuracy: 0.8098 | Val loss: 0.5274 | Val accuracy: 0.7791\n",
      "Epoch 269/500 | Train loss: 0.5033 | Train accuracy: 0.7649 | Val loss: 0.5099 | Val accuracy: 0.7511\n",
      "Epoch 270/500 | Train loss: 0.5286 | Train accuracy: 0.7500 | Val loss: 0.4703 | Val accuracy: 0.7911\n",
      "Epoch 271/500 | Train loss: 0.4817 | Train accuracy: 0.7880 | Val loss: 0.4844 | Val accuracy: 0.7599\n",
      "Epoch 272/500 | Train loss: 0.5414 | Train accuracy: 0.7378 | Val loss: 0.4879 | Val accuracy: 0.7599\n",
      "Epoch 273/500 | Train loss: 0.4901 | Train accuracy: 0.7745 | Val loss: 0.5402 | Val accuracy: 0.7390\n",
      "Epoch 274/500 | Train loss: 0.5176 | Train accuracy: 0.7704 | Val loss: 0.4778 | Val accuracy: 0.8051\n",
      "Epoch 275/500 | Train loss: 0.4696 | Train accuracy: 0.7799 | Val loss: 0.4699 | Val accuracy: 0.7843\n",
      "Epoch 276/500 | Train loss: 0.4664 | Train accuracy: 0.7948 | Val loss: 0.4439 | Val accuracy: 0.7791\n",
      "Epoch 277/500 | Train loss: 0.4652 | Train accuracy: 0.7948 | Val loss: 0.4952 | Val accuracy: 0.7771\n",
      "Epoch 278/500 | Train loss: 0.4585 | Train accuracy: 0.8057 | Val loss: 0.4845 | Val accuracy: 0.7791\n",
      "Epoch 279/500 | Train loss: 0.4894 | Train accuracy: 0.7948 | Val loss: 0.4717 | Val accuracy: 0.7843\n",
      "Epoch 280/500 | Train loss: 0.4623 | Train accuracy: 0.7908 | Val loss: 0.4899 | Val accuracy: 0.7651\n",
      "Epoch 281/500 | Train loss: 0.4525 | Train accuracy: 0.8084 | Val loss: 0.4584 | Val accuracy: 0.7895\n",
      "Epoch 282/500 | Train loss: 0.4504 | Train accuracy: 0.8016 | Val loss: 0.4863 | Val accuracy: 0.7843\n",
      "Epoch 283/500 | Train loss: 0.4709 | Train accuracy: 0.8030 | Val loss: 0.5087 | Val accuracy: 0.7878\n",
      "Epoch 284/500 | Train loss: 0.4445 | Train accuracy: 0.8071 | Val loss: 0.5332 | Val accuracy: 0.7791\n",
      "Epoch 285/500 | Train loss: 0.4391 | Train accuracy: 0.8152 | Val loss: 0.4707 | Val accuracy: 0.7738\n",
      "Epoch 286/500 | Train loss: 0.4672 | Train accuracy: 0.8152 | Val loss: 0.5536 | Val accuracy: 0.7703\n",
      "Epoch 287/500 | Train loss: 0.4377 | Train accuracy: 0.8016 | Val loss: 0.5672 | Val accuracy: 0.7807\n",
      "Epoch 288/500 | Train loss: 0.4043 | Train accuracy: 0.8274 | Val loss: 0.5523 | Val accuracy: 0.7771\n",
      "Epoch 289/500 | Train loss: 0.4422 | Train accuracy: 0.8125 | Val loss: 0.5867 | Val accuracy: 0.7807\n",
      "Epoch 290/500 | Train loss: 0.4317 | Train accuracy: 0.7935 | Val loss: 0.6116 | Val accuracy: 0.7651\n",
      "Epoch 291/500 | Train loss: 0.4891 | Train accuracy: 0.7880 | Val loss: 0.5406 | Val accuracy: 0.7530\n",
      "Epoch 292/500 | Train loss: 0.4989 | Train accuracy: 0.7731 | Val loss: 0.5739 | Val accuracy: 0.7495\n",
      "Epoch 293/500 | Train loss: 0.4760 | Train accuracy: 0.7745 | Val loss: 0.5763 | Val accuracy: 0.7547\n",
      "Epoch 294/500 | Train loss: 0.4674 | Train accuracy: 0.7935 | Val loss: 0.5521 | Val accuracy: 0.7651\n",
      "Epoch 295/500 | Train loss: 0.4642 | Train accuracy: 0.7840 | Val loss: 0.4707 | Val accuracy: 0.8067\n",
      "Epoch 296/500 | Train loss: 0.4621 | Train accuracy: 0.7962 | Val loss: 0.4720 | Val accuracy: 0.7911\n",
      "Epoch 297/500 | Train loss: 0.4336 | Train accuracy: 0.8003 | Val loss: 0.5016 | Val accuracy: 0.7703\n",
      "Epoch 298/500 | Train loss: 0.4302 | Train accuracy: 0.8166 | Val loss: 0.4770 | Val accuracy: 0.7963\n",
      "Epoch 299/500 | Train loss: 0.4311 | Train accuracy: 0.8179 | Val loss: 0.4865 | Val accuracy: 0.7615\n",
      "Epoch 300/500 | Train loss: 0.4651 | Train accuracy: 0.7840 | Val loss: 0.4831 | Val accuracy: 0.7755\n",
      "Epoch 301/500 | Train loss: 0.4224 | Train accuracy: 0.8057 | Val loss: 0.5670 | Val accuracy: 0.7703\n",
      "Epoch 302/500 | Train loss: 0.4536 | Train accuracy: 0.7921 | Val loss: 0.6604 | Val accuracy: 0.7599\n",
      "Epoch 303/500 | Train loss: 0.4647 | Train accuracy: 0.8003 | Val loss: 0.6264 | Val accuracy: 0.7686\n",
      "Epoch 304/500 | Train loss: 0.4303 | Train accuracy: 0.8193 | Val loss: 0.5666 | Val accuracy: 0.7703\n",
      "Epoch 305/500 | Train loss: 0.4187 | Train accuracy: 0.8098 | Val loss: 0.5162 | Val accuracy: 0.7755\n",
      "Epoch 306/500 | Train loss: 0.4387 | Train accuracy: 0.8030 | Val loss: 0.5493 | Val accuracy: 0.7755\n",
      "Epoch 307/500 | Train loss: 0.4332 | Train accuracy: 0.7989 | Val loss: 0.5878 | Val accuracy: 0.7703\n",
      "Epoch 308/500 | Train loss: 0.4229 | Train accuracy: 0.8166 | Val loss: 0.6281 | Val accuracy: 0.7807\n",
      "Epoch 309/500 | Train loss: 0.4580 | Train accuracy: 0.7948 | Val loss: 0.5669 | Val accuracy: 0.7634\n",
      "Epoch 310/500 | Train loss: 0.4322 | Train accuracy: 0.8084 | Val loss: 0.5773 | Val accuracy: 0.7651\n",
      "Epoch 311/500 | Train loss: 0.4163 | Train accuracy: 0.8098 | Val loss: 0.5888 | Val accuracy: 0.7755\n",
      "Epoch 312/500 | Train loss: 0.4485 | Train accuracy: 0.8152 | Val loss: 0.5355 | Val accuracy: 0.7615\n",
      "Epoch 313/500 | Train loss: 0.4274 | Train accuracy: 0.8207 | Val loss: 0.5568 | Val accuracy: 0.7755\n",
      "Epoch 314/500 | Train loss: 0.4079 | Train accuracy: 0.8234 | Val loss: 0.5580 | Val accuracy: 0.7755\n",
      "Epoch 315/500 | Train loss: 0.4303 | Train accuracy: 0.8139 | Val loss: 0.5671 | Val accuracy: 0.7667\n",
      "Epoch 316/500 | Train loss: 0.4132 | Train accuracy: 0.8220 | Val loss: 0.5714 | Val accuracy: 0.7599\n",
      "Epoch 317/500 | Train loss: 0.4651 | Train accuracy: 0.7867 | Val loss: 0.5289 | Val accuracy: 0.7755\n",
      "Epoch 318/500 | Train loss: 0.4209 | Train accuracy: 0.8315 | Val loss: 0.5414 | Val accuracy: 0.7651\n",
      "Epoch 319/500 | Train loss: 0.4503 | Train accuracy: 0.8125 | Val loss: 0.5171 | Val accuracy: 0.7755\n",
      "Epoch 320/500 | Train loss: 0.4139 | Train accuracy: 0.8261 | Val loss: 0.5496 | Val accuracy: 0.7563\n",
      "Epoch 321/500 | Train loss: 0.4569 | Train accuracy: 0.8139 | Val loss: 0.5281 | Val accuracy: 0.7843\n",
      "Epoch 322/500 | Train loss: 0.4157 | Train accuracy: 0.8057 | Val loss: 0.6034 | Val accuracy: 0.7755\n",
      "Epoch 323/500 | Train loss: 0.4616 | Train accuracy: 0.7976 | Val loss: 0.4984 | Val accuracy: 0.7807\n",
      "Epoch 324/500 | Train loss: 0.4575 | Train accuracy: 0.8043 | Val loss: 0.4985 | Val accuracy: 0.7843\n",
      "Epoch 325/500 | Train loss: 0.4629 | Train accuracy: 0.7826 | Val loss: 0.5160 | Val accuracy: 0.8015\n",
      "Epoch 326/500 | Train loss: 0.4522 | Train accuracy: 0.8139 | Val loss: 0.5208 | Val accuracy: 0.7807\n",
      "Epoch 327/500 | Train loss: 0.4594 | Train accuracy: 0.8071 | Val loss: 0.4831 | Val accuracy: 0.7807\n",
      "Epoch 328/500 | Train loss: 0.4450 | Train accuracy: 0.8030 | Val loss: 0.4794 | Val accuracy: 0.7495\n",
      "Epoch 329/500 | Train loss: 0.4134 | Train accuracy: 0.8220 | Val loss: 0.4877 | Val accuracy: 0.7755\n",
      "Epoch 330/500 | Train loss: 0.4410 | Train accuracy: 0.8247 | Val loss: 0.4802 | Val accuracy: 0.7878\n",
      "Epoch 331/500 | Train loss: 0.4787 | Train accuracy: 0.8003 | Val loss: 0.4270 | Val accuracy: 0.7895\n",
      "Epoch 332/500 | Train loss: 0.4381 | Train accuracy: 0.8071 | Val loss: 0.4374 | Val accuracy: 0.7895\n",
      "Epoch 333/500 | Train loss: 0.4357 | Train accuracy: 0.8043 | Val loss: 0.4450 | Val accuracy: 0.7947\n",
      "Epoch 334/500 | Train loss: 0.4240 | Train accuracy: 0.8139 | Val loss: 0.4692 | Val accuracy: 0.7755\n",
      "Epoch 335/500 | Train loss: 0.4259 | Train accuracy: 0.8220 | Val loss: 0.4511 | Val accuracy: 0.7895\n",
      "Epoch 336/500 | Train loss: 0.4050 | Train accuracy: 0.8247 | Val loss: 0.4650 | Val accuracy: 0.7895\n",
      "Epoch 337/500 | Train loss: 0.4239 | Train accuracy: 0.8084 | Val loss: 0.4489 | Val accuracy: 0.7807\n",
      "Epoch 338/500 | Train loss: 0.4258 | Train accuracy: 0.8288 | Val loss: 0.4377 | Val accuracy: 0.7895\n",
      "Epoch 339/500 | Train loss: 0.4404 | Train accuracy: 0.8356 | Val loss: 0.4754 | Val accuracy: 0.7738\n",
      "Epoch 340/500 | Train loss: 0.4304 | Train accuracy: 0.8125 | Val loss: 0.4851 | Val accuracy: 0.7843\n",
      "Epoch 341/500 | Train loss: 0.4280 | Train accuracy: 0.8071 | Val loss: 0.4841 | Val accuracy: 0.7895\n",
      "Epoch 342/500 | Train loss: 0.4203 | Train accuracy: 0.8261 | Val loss: 0.4987 | Val accuracy: 0.7895\n",
      "Epoch 343/500 | Train loss: 0.4327 | Train accuracy: 0.8111 | Val loss: 0.4345 | Val accuracy: 0.7738\n",
      "Epoch 344/500 | Train loss: 0.4026 | Train accuracy: 0.8193 | Val loss: 0.4386 | Val accuracy: 0.7843\n",
      "Epoch 345/500 | Train loss: 0.4336 | Train accuracy: 0.8166 | Val loss: 0.4414 | Val accuracy: 0.7895\n",
      "Epoch 346/500 | Train loss: 0.4287 | Train accuracy: 0.8315 | Val loss: 0.4566 | Val accuracy: 0.7843\n",
      "Epoch 347/500 | Train loss: 0.4303 | Train accuracy: 0.8098 | Val loss: 0.4578 | Val accuracy: 0.7843\n",
      "Epoch 348/500 | Train loss: 0.4262 | Train accuracy: 0.8356 | Val loss: 0.4586 | Val accuracy: 0.7947\n",
      "Epoch 349/500 | Train loss: 0.3971 | Train accuracy: 0.8302 | Val loss: 0.4807 | Val accuracy: 0.7947\n",
      "Epoch 350/500 | Train loss: 0.4091 | Train accuracy: 0.8193 | Val loss: 0.4364 | Val accuracy: 0.7843\n",
      "Epoch 351/500 | Train loss: 0.3864 | Train accuracy: 0.8315 | Val loss: 0.4565 | Val accuracy: 0.7738\n",
      "Epoch 352/500 | Train loss: 0.3968 | Train accuracy: 0.8288 | Val loss: 0.4229 | Val accuracy: 0.7947\n",
      "Epoch 353/500 | Train loss: 0.4372 | Train accuracy: 0.8179 | Val loss: 0.4481 | Val accuracy: 0.7843\n",
      "Epoch 354/500 | Train loss: 0.4267 | Train accuracy: 0.8356 | Val loss: 0.4389 | Val accuracy: 0.8087\n",
      "Epoch 355/500 | Train loss: 0.4407 | Train accuracy: 0.8071 | Val loss: 0.4378 | Val accuracy: 0.7895\n",
      "Epoch 356/500 | Train loss: 0.4360 | Train accuracy: 0.8342 | Val loss: 0.4646 | Val accuracy: 0.7947\n",
      "Epoch 357/500 | Train loss: 0.4185 | Train accuracy: 0.8302 | Val loss: 0.4428 | Val accuracy: 0.7895\n",
      "Epoch 358/500 | Train loss: 0.4329 | Train accuracy: 0.8057 | Val loss: 0.4522 | Val accuracy: 0.7791\n",
      "Epoch 359/500 | Train loss: 0.4362 | Train accuracy: 0.8261 | Val loss: 0.4572 | Val accuracy: 0.7947\n",
      "Epoch 360/500 | Train loss: 0.4316 | Train accuracy: 0.8220 | Val loss: 0.4583 | Val accuracy: 0.7843\n",
      "Epoch 361/500 | Train loss: 0.4116 | Train accuracy: 0.8234 | Val loss: 0.4810 | Val accuracy: 0.7895\n",
      "Epoch 362/500 | Train loss: 0.4159 | Train accuracy: 0.8111 | Val loss: 0.4583 | Val accuracy: 0.7843\n",
      "Epoch 363/500 | Train loss: 0.3990 | Train accuracy: 0.8315 | Val loss: 0.4478 | Val accuracy: 0.7738\n",
      "Epoch 364/500 | Train loss: 0.4557 | Train accuracy: 0.7826 | Val loss: 0.4704 | Val accuracy: 0.7791\n",
      "Epoch 365/500 | Train loss: 0.4196 | Train accuracy: 0.8125 | Val loss: 0.4608 | Val accuracy: 0.7703\n",
      "Epoch 366/500 | Train loss: 0.4335 | Train accuracy: 0.8247 | Val loss: 0.4917 | Val accuracy: 0.7755\n",
      "Epoch 367/500 | Train loss: 0.4392 | Train accuracy: 0.8098 | Val loss: 0.4596 | Val accuracy: 0.7826\n",
      "Epoch 368/500 | Train loss: 0.4149 | Train accuracy: 0.8166 | Val loss: 0.4835 | Val accuracy: 0.7738\n",
      "Epoch 369/500 | Train loss: 0.4386 | Train accuracy: 0.8234 | Val loss: 0.4723 | Val accuracy: 0.7843\n",
      "Epoch 370/500 | Train loss: 0.4137 | Train accuracy: 0.8234 | Val loss: 0.4829 | Val accuracy: 0.7947\n",
      "Epoch 371/500 | Train loss: 0.4178 | Train accuracy: 0.8261 | Val loss: 0.4524 | Val accuracy: 0.7947\n",
      "Epoch 372/500 | Train loss: 0.4047 | Train accuracy: 0.8207 | Val loss: 0.4804 | Val accuracy: 0.7843\n",
      "Epoch 373/500 | Train loss: 0.4451 | Train accuracy: 0.8261 | Val loss: 0.4662 | Val accuracy: 0.7547\n",
      "Epoch 374/500 | Train loss: 0.4242 | Train accuracy: 0.8220 | Val loss: 0.4474 | Val accuracy: 0.7947\n",
      "Epoch 375/500 | Train loss: 0.4190 | Train accuracy: 0.8288 | Val loss: 0.4552 | Val accuracy: 0.7843\n",
      "Epoch 376/500 | Train loss: 0.4268 | Train accuracy: 0.8098 | Val loss: 0.4529 | Val accuracy: 0.7791\n",
      "Epoch 377/500 | Train loss: 0.4161 | Train accuracy: 0.8247 | Val loss: 0.4419 | Val accuracy: 0.7791\n",
      "Epoch 378/500 | Train loss: 0.3986 | Train accuracy: 0.8465 | Val loss: 0.4718 | Val accuracy: 0.7791\n",
      "Epoch 379/500 | Train loss: 0.3723 | Train accuracy: 0.8505 | Val loss: 0.4624 | Val accuracy: 0.7843\n",
      "Epoch 380/500 | Train loss: 0.4052 | Train accuracy: 0.8247 | Val loss: 0.4661 | Val accuracy: 0.7791\n",
      "Epoch 381/500 | Train loss: 0.4147 | Train accuracy: 0.8125 | Val loss: 0.4690 | Val accuracy: 0.7686\n",
      "Epoch 382/500 | Train loss: 0.4207 | Train accuracy: 0.8166 | Val loss: 0.5490 | Val accuracy: 0.7547\n",
      "Epoch 383/500 | Train loss: 0.4398 | Train accuracy: 0.8016 | Val loss: 0.4829 | Val accuracy: 0.7791\n",
      "Epoch 384/500 | Train loss: 0.4031 | Train accuracy: 0.8315 | Val loss: 0.4959 | Val accuracy: 0.7651\n",
      "Epoch 385/500 | Train loss: 0.4393 | Train accuracy: 0.8261 | Val loss: 0.4490 | Val accuracy: 0.8087\n",
      "Epoch 386/500 | Train loss: 0.4297 | Train accuracy: 0.8207 | Val loss: 0.4578 | Val accuracy: 0.7930\n",
      "Epoch 387/500 | Train loss: 0.4328 | Train accuracy: 0.8084 | Val loss: 0.4672 | Val accuracy: 0.8035\n",
      "Epoch 388/500 | Train loss: 0.4253 | Train accuracy: 0.8071 | Val loss: 0.4616 | Val accuracy: 0.7791\n",
      "Epoch 389/500 | Train loss: 0.4296 | Train accuracy: 0.8166 | Val loss: 0.4237 | Val accuracy: 0.7791\n",
      "Epoch 390/500 | Train loss: 0.4256 | Train accuracy: 0.8274 | Val loss: 0.4496 | Val accuracy: 0.7947\n",
      "Epoch 391/500 | Train loss: 0.4384 | Train accuracy: 0.8071 | Val loss: 0.4552 | Val accuracy: 0.7791\n",
      "Epoch 392/500 | Train loss: 0.4192 | Train accuracy: 0.8220 | Val loss: 0.4515 | Val accuracy: 0.7738\n",
      "Epoch 393/500 | Train loss: 0.4325 | Train accuracy: 0.8220 | Val loss: 0.4465 | Val accuracy: 0.7895\n",
      "Epoch 394/500 | Train loss: 0.4310 | Train accuracy: 0.7962 | Val loss: 0.4768 | Val accuracy: 0.7947\n",
      "Epoch 395/500 | Train loss: 0.4315 | Train accuracy: 0.8016 | Val loss: 0.4952 | Val accuracy: 0.7843\n",
      "Epoch 396/500 | Train loss: 0.4188 | Train accuracy: 0.8057 | Val loss: 0.4900 | Val accuracy: 0.7930\n",
      "Epoch 397/500 | Train loss: 0.4374 | Train accuracy: 0.8152 | Val loss: 0.4665 | Val accuracy: 0.7686\n",
      "Epoch 398/500 | Train loss: 0.4411 | Train accuracy: 0.7976 | Val loss: 0.4486 | Val accuracy: 0.7791\n",
      "Epoch 399/500 | Train loss: 0.4402 | Train accuracy: 0.8288 | Val loss: 0.4459 | Val accuracy: 0.7930\n",
      "Epoch 400/500 | Train loss: 0.4575 | Train accuracy: 0.7867 | Val loss: 0.4639 | Val accuracy: 0.7651\n",
      "Epoch 401/500 | Train loss: 0.4447 | Train accuracy: 0.7935 | Val loss: 0.4775 | Val accuracy: 0.7738\n",
      "Epoch 402/500 | Train loss: 0.3992 | Train accuracy: 0.8342 | Val loss: 0.4670 | Val accuracy: 0.7547\n",
      "Epoch 403/500 | Train loss: 0.4305 | Train accuracy: 0.8179 | Val loss: 0.4694 | Val accuracy: 0.7738\n",
      "Epoch 404/500 | Train loss: 0.4351 | Train accuracy: 0.8030 | Val loss: 0.4580 | Val accuracy: 0.7686\n",
      "Epoch 405/500 | Train loss: 0.4329 | Train accuracy: 0.8152 | Val loss: 0.5006 | Val accuracy: 0.7634\n",
      "Epoch 406/500 | Train loss: 0.4728 | Train accuracy: 0.8111 | Val loss: 0.4868 | Val accuracy: 0.7599\n",
      "Epoch 407/500 | Train loss: 0.4135 | Train accuracy: 0.8193 | Val loss: 0.4857 | Val accuracy: 0.7686\n",
      "Epoch 408/500 | Train loss: 0.4391 | Train accuracy: 0.8166 | Val loss: 0.4889 | Val accuracy: 0.7895\n",
      "Epoch 409/500 | Train loss: 0.4519 | Train accuracy: 0.8152 | Val loss: 0.5048 | Val accuracy: 0.7843\n",
      "Epoch 410/500 | Train loss: 0.4492 | Train accuracy: 0.8084 | Val loss: 0.6255 | Val accuracy: 0.7738\n",
      "Epoch 411/500 | Train loss: 0.4397 | Train accuracy: 0.8057 | Val loss: 0.5192 | Val accuracy: 0.7774\n",
      "Epoch 412/500 | Train loss: 0.4273 | Train accuracy: 0.8166 | Val loss: 0.4781 | Val accuracy: 0.7843\n",
      "Epoch 413/500 | Train loss: 0.4698 | Train accuracy: 0.7962 | Val loss: 0.4314 | Val accuracy: 0.7930\n",
      "Epoch 414/500 | Train loss: 0.4449 | Train accuracy: 0.8071 | Val loss: 0.4445 | Val accuracy: 0.7738\n",
      "Epoch 415/500 | Train loss: 0.4417 | Train accuracy: 0.8125 | Val loss: 0.4334 | Val accuracy: 0.7947\n",
      "Epoch 416/500 | Train loss: 0.4314 | Train accuracy: 0.8030 | Val loss: 0.4684 | Val accuracy: 0.7791\n",
      "Epoch 417/500 | Train loss: 0.4250 | Train accuracy: 0.8152 | Val loss: 0.4546 | Val accuracy: 0.7947\n",
      "Epoch 418/500 | Train loss: 0.4042 | Train accuracy: 0.8288 | Val loss: 0.4549 | Val accuracy: 0.7791\n",
      "Epoch 419/500 | Train loss: 0.4240 | Train accuracy: 0.8315 | Val loss: 0.4810 | Val accuracy: 0.7895\n",
      "Epoch 420/500 | Train loss: 0.4085 | Train accuracy: 0.8247 | Val loss: 0.4740 | Val accuracy: 0.7895\n",
      "Epoch 421/500 | Train loss: 0.3884 | Train accuracy: 0.8465 | Val loss: 0.4925 | Val accuracy: 0.7911\n",
      "Epoch 422/500 | Train loss: 0.4224 | Train accuracy: 0.8383 | Val loss: 0.4923 | Val accuracy: 0.7738\n",
      "Epoch 423/500 | Train loss: 0.4446 | Train accuracy: 0.7962 | Val loss: 0.4582 | Val accuracy: 0.7686\n",
      "Epoch 424/500 | Train loss: 0.4263 | Train accuracy: 0.8193 | Val loss: 0.4482 | Val accuracy: 0.7791\n",
      "Epoch 425/500 | Train loss: 0.4113 | Train accuracy: 0.8329 | Val loss: 0.4283 | Val accuracy: 0.7999\n",
      "Epoch 426/500 | Train loss: 0.4409 | Train accuracy: 0.8057 | Val loss: 0.4546 | Val accuracy: 0.7843\n",
      "Epoch 427/500 | Train loss: 0.4088 | Train accuracy: 0.8234 | Val loss: 0.4668 | Val accuracy: 0.8139\n",
      "Epoch 428/500 | Train loss: 0.4437 | Train accuracy: 0.8166 | Val loss: 0.4606 | Val accuracy: 0.7999\n",
      "Epoch 429/500 | Train loss: 0.4259 | Train accuracy: 0.8179 | Val loss: 0.4527 | Val accuracy: 0.7843\n",
      "Epoch 430/500 | Train loss: 0.4273 | Train accuracy: 0.8084 | Val loss: 0.4785 | Val accuracy: 0.7791\n",
      "Epoch 431/500 | Train loss: 0.4135 | Train accuracy: 0.8166 | Val loss: 0.4575 | Val accuracy: 0.7738\n",
      "Epoch 432/500 | Train loss: 0.4088 | Train accuracy: 0.8356 | Val loss: 0.4625 | Val accuracy: 0.7859\n",
      "Epoch 433/500 | Train loss: 0.4392 | Train accuracy: 0.8166 | Val loss: 0.4677 | Val accuracy: 0.7895\n",
      "Epoch 434/500 | Train loss: 0.4332 | Train accuracy: 0.8125 | Val loss: 0.4608 | Val accuracy: 0.7895\n",
      "Epoch 435/500 | Train loss: 0.4109 | Train accuracy: 0.8179 | Val loss: 0.4771 | Val accuracy: 0.7895\n",
      "Epoch 436/500 | Train loss: 0.4359 | Train accuracy: 0.8166 | Val loss: 0.4656 | Val accuracy: 0.7738\n",
      "Epoch 437/500 | Train loss: 0.4010 | Train accuracy: 0.8220 | Val loss: 0.4567 | Val accuracy: 0.7947\n",
      "Epoch 438/500 | Train loss: 0.4273 | Train accuracy: 0.8193 | Val loss: 0.4533 | Val accuracy: 0.7738\n",
      "Epoch 439/500 | Train loss: 0.4402 | Train accuracy: 0.8030 | Val loss: 0.4719 | Val accuracy: 0.7582\n",
      "Epoch 440/500 | Train loss: 0.6154 | Train accuracy: 0.8193 | Val loss: 0.4931 | Val accuracy: 0.7582\n",
      "Epoch 441/500 | Train loss: 0.4949 | Train accuracy: 0.7649 | Val loss: 0.4632 | Val accuracy: 0.7667\n",
      "Epoch 442/500 | Train loss: 0.5187 | Train accuracy: 0.7908 | Val loss: 0.5186 | Val accuracy: 0.7495\n",
      "Epoch 443/500 | Train loss: 0.4591 | Train accuracy: 0.8166 | Val loss: 0.4479 | Val accuracy: 0.7807\n",
      "Epoch 444/500 | Train loss: 0.4390 | Train accuracy: 0.8234 | Val loss: 0.5006 | Val accuracy: 0.7843\n",
      "Epoch 445/500 | Train loss: 0.4167 | Train accuracy: 0.8261 | Val loss: 0.5909 | Val accuracy: 0.7791\n",
      "Epoch 446/500 | Train loss: 0.4751 | Train accuracy: 0.7867 | Val loss: 0.4762 | Val accuracy: 0.7686\n",
      "Epoch 447/500 | Train loss: 0.4556 | Train accuracy: 0.8071 | Val loss: 0.5103 | Val accuracy: 0.7791\n",
      "Epoch 448/500 | Train loss: 0.4610 | Train accuracy: 0.7935 | Val loss: 0.4644 | Val accuracy: 0.7791\n",
      "Epoch 449/500 | Train loss: 0.4628 | Train accuracy: 0.7948 | Val loss: 0.4571 | Val accuracy: 0.7791\n",
      "Epoch 450/500 | Train loss: 0.4573 | Train accuracy: 0.7976 | Val loss: 0.5479 | Val accuracy: 0.7547\n",
      "Epoch 451/500 | Train loss: 0.4476 | Train accuracy: 0.7935 | Val loss: 0.5679 | Val accuracy: 0.7495\n",
      "Epoch 452/500 | Train loss: 0.4572 | Train accuracy: 0.7962 | Val loss: 0.5122 | Val accuracy: 0.7755\n",
      "Epoch 453/500 | Train loss: 0.4591 | Train accuracy: 0.7853 | Val loss: 0.4679 | Val accuracy: 0.7930\n",
      "Epoch 454/500 | Train loss: 0.4677 | Train accuracy: 0.7880 | Val loss: 0.4608 | Val accuracy: 0.7947\n",
      "Epoch 455/500 | Train loss: 0.4702 | Train accuracy: 0.7989 | Val loss: 0.5357 | Val accuracy: 0.7807\n",
      "Epoch 456/500 | Train loss: 0.4837 | Train accuracy: 0.7894 | Val loss: 0.5475 | Val accuracy: 0.7651\n",
      "Epoch 457/500 | Train loss: 0.4572 | Train accuracy: 0.7880 | Val loss: 0.5127 | Val accuracy: 0.7738\n",
      "Epoch 458/500 | Train loss: 0.4782 | Train accuracy: 0.8003 | Val loss: 0.4855 | Val accuracy: 0.7599\n",
      "Epoch 459/500 | Train loss: 0.4700 | Train accuracy: 0.7921 | Val loss: 0.4568 | Val accuracy: 0.7895\n",
      "Epoch 460/500 | Train loss: 0.4323 | Train accuracy: 0.8288 | Val loss: 0.4874 | Val accuracy: 0.7651\n",
      "Epoch 461/500 | Train loss: 0.4383 | Train accuracy: 0.8016 | Val loss: 0.5055 | Val accuracy: 0.7599\n",
      "Epoch 462/500 | Train loss: 0.4479 | Train accuracy: 0.7921 | Val loss: 0.4933 | Val accuracy: 0.7582\n",
      "Epoch 463/500 | Train loss: 0.4542 | Train accuracy: 0.8043 | Val loss: 0.4949 | Val accuracy: 0.7686\n",
      "Epoch 464/500 | Train loss: 0.4548 | Train accuracy: 0.7948 | Val loss: 0.4572 | Val accuracy: 0.7930\n",
      "Epoch 465/500 | Train loss: 0.4372 | Train accuracy: 0.8152 | Val loss: 0.4815 | Val accuracy: 0.7791\n",
      "Epoch 466/500 | Train loss: 0.4191 | Train accuracy: 0.8274 | Val loss: 0.4556 | Val accuracy: 0.7947\n",
      "Epoch 467/500 | Train loss: 0.4127 | Train accuracy: 0.8261 | Val loss: 0.4588 | Val accuracy: 0.7895\n",
      "Epoch 468/500 | Train loss: 0.4612 | Train accuracy: 0.8043 | Val loss: 0.4422 | Val accuracy: 0.8051\n",
      "Epoch 469/500 | Train loss: 0.4443 | Train accuracy: 0.7948 | Val loss: 0.4612 | Val accuracy: 0.7826\n",
      "Epoch 470/500 | Train loss: 0.4085 | Train accuracy: 0.8247 | Val loss: 0.4991 | Val accuracy: 0.7738\n",
      "Epoch 471/500 | Train loss: 0.4400 | Train accuracy: 0.8030 | Val loss: 0.4495 | Val accuracy: 0.7582\n",
      "Epoch 472/500 | Train loss: 0.4326 | Train accuracy: 0.8152 | Val loss: 0.4534 | Val accuracy: 0.7755\n",
      "Epoch 473/500 | Train loss: 0.4284 | Train accuracy: 0.8125 | Val loss: 0.4692 | Val accuracy: 0.7878\n",
      "Epoch 474/500 | Train loss: 0.4111 | Train accuracy: 0.8261 | Val loss: 0.4447 | Val accuracy: 0.8035\n",
      "Epoch 475/500 | Train loss: 0.4178 | Train accuracy: 0.8261 | Val loss: 0.4584 | Val accuracy: 0.7791\n",
      "Epoch 476/500 | Train loss: 0.4183 | Train accuracy: 0.8193 | Val loss: 0.4278 | Val accuracy: 0.7878\n",
      "Epoch 477/500 | Train loss: 0.4422 | Train accuracy: 0.7976 | Val loss: 0.4514 | Val accuracy: 0.7738\n",
      "Epoch 478/500 | Train loss: 0.4487 | Train accuracy: 0.7962 | Val loss: 0.4562 | Val accuracy: 0.7947\n",
      "Epoch 479/500 | Train loss: 0.4265 | Train accuracy: 0.8207 | Val loss: 0.4670 | Val accuracy: 0.7895\n",
      "Epoch 480/500 | Train loss: 0.4228 | Train accuracy: 0.8152 | Val loss: 0.4901 | Val accuracy: 0.7843\n",
      "Epoch 481/500 | Train loss: 0.3970 | Train accuracy: 0.8397 | Val loss: 0.5292 | Val accuracy: 0.7843\n",
      "Epoch 482/500 | Train loss: 0.4256 | Train accuracy: 0.8234 | Val loss: 0.4600 | Val accuracy: 0.7878\n",
      "Epoch 483/500 | Train loss: 0.4565 | Train accuracy: 0.8003 | Val loss: 0.4552 | Val accuracy: 0.7826\n",
      "Epoch 484/500 | Train loss: 0.4265 | Train accuracy: 0.8125 | Val loss: 0.4440 | Val accuracy: 0.7895\n",
      "Epoch 485/500 | Train loss: 0.4440 | Train accuracy: 0.8043 | Val loss: 0.4802 | Val accuracy: 0.7686\n",
      "Epoch 486/500 | Train loss: 0.4717 | Train accuracy: 0.7908 | Val loss: 0.4539 | Val accuracy: 0.7895\n",
      "Epoch 487/500 | Train loss: 0.4252 | Train accuracy: 0.8193 | Val loss: 0.4112 | Val accuracy: 0.8139\n",
      "Epoch 488/500 | Train loss: 0.4129 | Train accuracy: 0.8329 | Val loss: 0.4631 | Val accuracy: 0.7791\n",
      "Epoch 489/500 | Train loss: 0.4610 | Train accuracy: 0.8111 | Val loss: 0.4433 | Val accuracy: 0.7982\n",
      "Epoch 490/500 | Train loss: 0.4741 | Train accuracy: 0.8016 | Val loss: 0.4468 | Val accuracy: 0.7774\n",
      "Epoch 491/500 | Train loss: 0.4244 | Train accuracy: 0.8030 | Val loss: 0.4276 | Val accuracy: 0.7947\n",
      "Epoch 492/500 | Train loss: 0.4566 | Train accuracy: 0.8098 | Val loss: 0.4701 | Val accuracy: 0.7791\n",
      "Epoch 493/500 | Train loss: 0.4897 | Train accuracy: 0.8003 | Val loss: 0.5971 | Val accuracy: 0.7686\n",
      "Epoch 494/500 | Train loss: 0.5415 | Train accuracy: 0.7867 | Val loss: 0.5015 | Val accuracy: 0.7982\n",
      "Epoch 495/500 | Train loss: 0.4562 | Train accuracy: 0.8125 | Val loss: 0.4540 | Val accuracy: 0.7895\n",
      "Epoch 496/500 | Train loss: 0.4463 | Train accuracy: 0.8030 | Val loss: 0.4731 | Val accuracy: 0.7582\n",
      "Epoch 497/500 | Train loss: 0.4822 | Train accuracy: 0.7840 | Val loss: 0.4405 | Val accuracy: 0.7895\n",
      "Epoch 498/500 | Train loss: 0.4213 | Train accuracy: 0.8261 | Val loss: 0.4087 | Val accuracy: 0.8139\n",
      "Epoch 499/500 | Train loss: 0.4301 | Train accuracy: 0.8220 | Val loss: 0.4308 | Val accuracy: 0.7895\n",
      "Epoch 500/500 | Train loss: 0.4674 | Train accuracy: 0.8057 | Val loss: 0.4558 | Val accuracy: 0.7686\n"
     ]
    }
   ],
   "source": [
    "# Train model algorithm\n",
    "\n",
    "n_epochs = 500\n",
    "train_losses = []\n",
    "val_losses = []\n",
    "train_accuracies = []\n",
    "val_accuracies = []\n",
    "best_val_accuracy = 0  # Variable to store the best validation accuracy\n",
    "best_model_path = 'best_model.pth'  # Path to save the best model\n",
    "\n",
    "for epoch in range(n_epochs):\n",
    "    model.train()\n",
    "    train_loss = 0\n",
    "    train_accuracy = 0\n",
    "    for i, (X_batch, y_batch) in enumerate(train_loader):\n",
    "        optimizer.zero_grad()\n",
    "        y_pred = model(X_batch)\n",
    "        loss = criterion(y_pred, y_batch)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "        train_loss += loss.item()\n",
    "        train_accuracy += accuracy_score(y_batch.numpy(), y_pred.argmax(axis=1).detach().numpy())\n",
    "    train_loss /= len(train_loader)\n",
    "    train_accuracy /= len(train_loader)\n",
    "    train_losses.append(train_loss)\n",
    "    train_accuracies.append(train_accuracy)\n",
    "    \n",
    "    model.eval()\n",
    "    val_loss = 0\n",
    "    val_accuracy = 0\n",
    "    with torch.no_grad():\n",
    "        for i, (X_batch, y_batch) in enumerate(val_loader):\n",
    "            y_pred = model(X_batch)\n",
    "            loss = criterion(y_pred, y_batch)\n",
    "            val_loss += loss.item()\n",
    "            val_accuracy += accuracy_score(y_batch.numpy(), y_pred.argmax(axis=1).detach().numpy())\n",
    "        val_loss /= len(val_loader)\n",
    "        val_accuracy /= len(val_loader)\n",
    "        val_losses.append(val_loss)\n",
    "        val_accuracies.append(val_accuracy)        \n",
    "\n",
    "        # Check if the current model has the best validation accuracy\n",
    "        if val_accuracy > best_val_accuracy:\n",
    "            best_val_accuracy = val_accuracy\n",
    "            torch.save(model.state_dict(), best_model_path)  # Save the best model\n",
    "    \n",
    "    print(f\"Epoch {epoch+1}/{n_epochs} | Train loss: {train_loss:.4f} | Train accuracy: {train_accuracy:.4f} | Val loss: {val_loss:.4f} | Val accuracy: {val_accuracy:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "25e1ccd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:15:00.955220Z",
     "iopub.status.busy": "2024-07-20T17:15:00.954805Z",
     "iopub.status.idle": "2024-07-20T17:15:01.568623Z",
     "shell.execute_reply": "2024-07-20T17:15:01.567348Z"
    },
    "papermill": {
     "duration": 0.648239,
     "end_time": "2024-07-20T17:15:01.571704",
     "exception": false,
     "start_time": "2024-07-20T17:15:00.923465",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot training and validation losses\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.plot(train_losses, label='Train loss')\n",
    "plt.plot(val_losses, label='Val loss')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "# Plot training and validation accuracies\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.plot(train_accuracies, label='Train accuracy')\n",
    "plt.plot(val_accuracies, label='Val accuracy')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ab4ab1df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:15:01.638147Z",
     "iopub.status.busy": "2024-07-20T17:15:01.637681Z",
     "iopub.status.idle": "2024-07-20T17:15:01.654358Z",
     "shell.execute_reply": "2024-07-20T17:15:01.652903Z"
    },
    "papermill": {
     "duration": 0.052798,
     "end_time": "2024-07-20T17:15:01.657212",
     "exception": false,
     "start_time": "2024-07-20T17:15:01.604414",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best model accuracy: 0.8156\n"
     ]
    }
   ],
   "source": [
    "# Best model metrics\n",
    "best_model = MLP()\n",
    "best_model.load_state_dict(torch.load(best_model_path))\n",
    "best_model.eval()\n",
    "y_pred = best_model(torch.tensor(X_val.values, dtype=torch.float32)).argmax(axis=1).detach().numpy()\n",
    "print(f\"Best model accuracy: {accuracy_score(y_val, y_pred):.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6abf52cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-20T17:15:01.726688Z",
     "iopub.status.busy": "2024-07-20T17:15:01.726090Z",
     "iopub.status.idle": "2024-07-20T17:15:01.751565Z",
     "shell.execute_reply": "2024-07-20T17:15:01.749480Z"
    },
    "papermill": {
     "duration": 0.063468,
     "end_time": "2024-07-20T17:15:01.754557",
     "exception": false,
     "start_time": "2024-07-20T17:15:01.691089",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Submission saved\n",
      "   PassengerId  Survived\n",
      "0          892         0\n",
      "1          893         0\n",
      "2          894         0\n",
      "3          895         0\n",
      "4          896         0\n",
      "We predict 25.84% of passengers to survive\n",
      "That means there are 108 survivors out of 418 passengers\n"
     ]
    }
   ],
   "source": [
    "# Use best model to predict test\n",
    "y_pred = best_model(torch.tensor(X_test.values, dtype=torch.float32)).argmax(axis=1).detach().numpy()\n",
    "\n",
    "# Save predictions\n",
    "\n",
    "output = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': y_pred})\n",
    "\n",
    "output.to_csv(OUTPUT_PATH, index=False)\n",
    "print(\"Submission saved\")\n",
    "\n",
    "# Check submission\n",
    "\n",
    "submission = pd.read_csv(OUTPUT_PATH)\n",
    "print(submission.head())\n",
    "\n",
    "# Plot distribution of predictions\n",
    "\n",
    "print(f\"We predict {submission['Survived'].mean()*100:.2f}% of passengers to survive\")\n",
    "print(f\"That means there are {submission['Survived'].sum()} survivors out of {len(submission)} passengers\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 26502,
     "sourceId": 3136,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30746,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 79.636319,
   "end_time": "2024-07-20T17:15:03.211101",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-20T17:13:43.574782",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
